<?xml version="1.0" encoding="UTF-8"?>
<!--
 ~  Copyright (c) 2016, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 ~
 ~  WSO2 Inc. licenses this file to you under the Apache License,
 ~  Version 2.0 (the "License"); you may not use this file except
 ~  in compliance with the License.
 ~  You may obtain a copy of the License at
 ~
 ~    http://www.apache.org/licenses/LICENSE-2.0
 ~
 ~  Unless required by applicable law or agreed to in writing,
 ~  software distributed under the License is distributed on an
 ~  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 ~  KIND, either express or implied.  See the License for the
 ~  specific language governing permissions and limitations
 ~  under the License.
-->
<proxy xmlns="http://ws.apache.org/ns/synapse" name="wunderlist" transports="https,http" statistics="disable"
       trace="disable" startOnLoad="true">
    <target>
        <inSequence>
            <property name="apiUrl" expression="json-eval($.apiUrl)"/>
            <property name="clientId" expression="json-eval($.clientId)"/>
            <property name="accessToken" expression="json-eval($.accessToken)"/>
            <property name="title" expression="json-eval($.title)"/>
            <property name="listId" expression="json-eval($.listId)"/>
            <property name="revision" expression="json-eval($.revision)"/>
            <property name="listIds" expression="json-eval($.listIds)"/>
            <property name="folderId" expression="json-eval($.folderId)"/>
            <property name="userId" expression="json-eval($.userId)"/>
            <property name="muted" expression="json-eval($.muted)"/>
            <property name="dueDate" expression="json-eval($.dueDate)"/>
            <property name="completed" expression="json-eval($.completed)"/>
            <property name="starred" expression="json-eval($.starred)"/>
            <property name="recurrenceType" expression="json-eval($.recurrenceType)"/>
            <property name="recurrenceCount" expression="json-eval($.recurrenceCount)"/>
            <property name="taskId" expression="json-eval($.taskId)"/>
            <property name="content" expression="json-eval($.content)"/>
            <property name="noteId" expression="json-eval($.noteId)"/>
            <property name="date" expression="json-eval($.date)"/>
            <property name="reminderId" expression="json-eval($.reminderId)"/>
            <wunderlist.init>
                <apiUrl>{$ctx:apiUrl}</apiUrl>
                <clientId>{$ctx:clientId}</clientId>
                <accessToken>{$ctx:accessToken}</accessToken>
            </wunderlist.init>
            <switch source="get-property('transport', 'Action')">
                <case regex="urn:createList">
                    <wunderlist.createList>
                        <title>{$ctx:title}</title>
                    </wunderlist.createList>
                </case>
                <case regex="urn:getList">
                    <wunderlist.getList>
                        <listId>{$ctx:listId}</listId>
                    </wunderlist.getList>
                </case>
                <case regex="urn:listLists">
                    <wunderlist.listLists>
                    </wunderlist.listLists>
                </case>
                <case regex="urn:updateList">
                    <wunderlist.updateList>
                        <revision>{$ctx:revision}</revision>
                        <title>{$ctx:title}</title>
                        <listId>{$ctx:listId}</listId>
                    </wunderlist.updateList>
                </case>
                <case regex="urn:createFolder">
                    <wunderlist.createFolder>
                        <title>{$ctx:title}</title>
                        <listIds>{$ctx:listIds}</listIds>
                    </wunderlist.createFolder>
                </case>
                <case regex="urn:getFolder">
                    <wunderlist.getFolder>
                        <folderId>{$ctx:folderId}</folderId>
                    </wunderlist.getFolder>
                </case>
                <case regex="urn:listFolders">
                    <wunderlist.listFolders>
                    </wunderlist.listFolders>
                </case>
                <case regex="urn:updateFolder">
                    <wunderlist.updateFolder>
                        <folderId>{$ctx:folderId}</folderId>
                        <title>{$ctx:title}</title>
                        <listIds>{$ctx:listIds}</listIds>
                        <revision>{$ctx:revision}</revision>
                    </wunderlist.updateFolder>
                </case>
                <case regex="urn:addMember">
                    <wunderlist.addMember>
                        <listId>{$ctx:listId}</listId>
                        <userId>{$ctx:userId}</userId>
                        <muted>{$ctx:muted}</muted>
                    </wunderlist.addMember>
                </case>
                <case regex="urn:listMembers">
                    <wunderlist.listMembers>
                    </wunderlist.listMembers>
                </case>
                <case regex="urn:createTask">
                    <wunderlist.createTask>
                        <listId>{$ctx:listId}</listId>
                        <title>{$ctx:title}</title>
                        <dueDate>{$ctx:dueDate}</dueDate>
                        <starred>{$ctx:starred}</starred>
                        <completed>{$ctx:completed}</completed>
                        <recurrenceType>{$ctx:recurrenceType}</recurrenceType>
                        <recurrenceCount>{$ctx:recurrenceCount}</recurrenceCount>
                    </wunderlist.createTask>
                </case>
                <case regex="urn:getTask">
                    <wunderlist.getTask>
                        <taskId>{$ctx:taskId}</taskId>
                    </wunderlist.getTask>
                </case>
                <case regex="urn:listTasks">
                    <wunderlist.listTasks>
                        <listId>{$ctx:listId}</listId>
                        <completed>{$ctx:completed}</completed>
                    </wunderlist.listTasks>
                </case>
                <case regex="urn:updateTask">
                    <wunderlist.updateTask>
                        <taskId>{$ctx:taskId}</taskId>
                        <revision>{$ctx:revision}</revision>
                        <title>{$ctx:title}</title>
                        <starred>{$ctx:starred}</starred>
                        <completed>{$ctx:completed}</completed>
                        <recurrenceType>{$ctx:recurrenceType}</recurrenceType>
                        <recurrenceCount>{$ctx:recurrenceCount}</recurrenceCount>
                    </wunderlist.updateTask>
                </case>
                <case regex="urn:deleteTask">
                    <wunderlist.deleteTask>
                        <taskId>{$ctx:taskId}</taskId>
                        <revision>{$ctx:revision}</revision>
                    </wunderlist.deleteTask>
                </case>
                <case regex="urn:createNote">
                    <wunderlist.createNote>
                        <taskId>{$ctx:taskId}</taskId>
                        <content>{$ctx:content}</content>
                    </wunderlist.createNote>
                </case>
                <case regex="urn:getNote">
                    <wunderlist.getNote>
                        <noteId>{$ctx:noteId}</noteId>
                    </wunderlist.getNote>
                </case>
                <case regex="urn:listNotes">
                    <wunderlist.listNotes>
                        <taskId>{$ctx:taskId}</taskId>
                    </wunderlist.listNotes>
                </case>
                <case regex="urn:updateNote">
                    <wunderlist.updateNote>
                        <noteId>{$ctx:noteId}</noteId>
                        <content>{$ctx:content}</content>
                        <revision>{$ctx:revision}</revision>
                    </wunderlist.updateNote>
                </case>
                <case regex="urn:createReminder">
                    <wunderlist.createReminder>
                        <taskId>{$ctx:taskId}</taskId>
                        <date>{$ctx:date}</date>
                    </wunderlist.createReminder>
                </case>
                <case regex="urn:listReminders">
                    <wunderlist.listReminders>
                        <taskId>{$ctx:taskId}</taskId>
                    </wunderlist.listReminders>
                </case>
                <case regex="urn:updateReminder">
                    <wunderlist.updateReminder>
                        <date>{$ctx:date}</date>
                        <revision>{$ctx:revision}</revision>
                        <reminderId>{$ctx:reminderId}</reminderId>
                    </wunderlist.updateReminder>
                </case>
            </switch>
            <respond></respond>
        </inSequence>
        <outSequence>
            <log></log>
            <send></send>
        </outSequence>
    </target>
</proxy>